{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "839a5175",
   "metadata": {},
   "outputs": [],
   "source": [
    "#klasifikasi ANN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fc9d22fb",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-04-09 15:39:39.499739: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
      "To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/100\n",
      "4/4 [==============================] - 1s 85ms/step - loss: 118.2488 - accuracy: 0.3982 - val_loss: 114.8433 - val_accuracy: 0.4138\n",
      "Epoch 2/100\n",
      "4/4 [==============================] - 0s 18ms/step - loss: 105.3306 - accuracy: 0.3982 - val_loss: 102.0076 - val_accuracy: 0.4138\n",
      "Epoch 3/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 93.0873 - accuracy: 0.3982 - val_loss: 89.6006 - val_accuracy: 0.4138\n",
      "Epoch 4/100\n",
      "4/4 [==============================] - 0s 19ms/step - loss: 81.1472 - accuracy: 0.3451 - val_loss: 78.8218 - val_accuracy: 0.1724\n",
      "Epoch 5/100\n",
      "4/4 [==============================] - 0s 19ms/step - loss: 74.2915 - accuracy: 0.1416 - val_loss: 77.8445 - val_accuracy: 0.3103\n",
      "Epoch 6/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 74.2510 - accuracy: 0.3186 - val_loss: 77.2198 - val_accuracy: 0.3103\n",
      "Epoch 7/100\n",
      "4/4 [==============================] - 0s 20ms/step - loss: 72.7762 - accuracy: 0.3186 - val_loss: 74.7144 - val_accuracy: 0.3103\n",
      "Epoch 8/100\n",
      "4/4 [==============================] - 0s 17ms/step - loss: 70.1690 - accuracy: 0.3186 - val_loss: 71.0735 - val_accuracy: 0.3103\n",
      "Epoch 9/100\n",
      "4/4 [==============================] - 0s 26ms/step - loss: 66.6412 - accuracy: 0.3009 - val_loss: 67.1811 - val_accuracy: 0.1724\n",
      "Epoch 10/100\n",
      "4/4 [==============================] - 0s 28ms/step - loss: 63.1731 - accuracy: 0.1504 - val_loss: 63.9883 - val_accuracy: 0.3103\n",
      "Epoch 11/100\n",
      "4/4 [==============================] - 0s 33ms/step - loss: 60.0347 - accuracy: 0.3451 - val_loss: 62.1873 - val_accuracy: 0.4483\n",
      "Epoch 12/100\n",
      "4/4 [==============================] - 0s 29ms/step - loss: 58.3319 - accuracy: 0.4602 - val_loss: 60.3377 - val_accuracy: 0.5172\n",
      "Epoch 13/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 56.6007 - accuracy: 0.5133 - val_loss: 58.6513 - val_accuracy: 0.5862\n",
      "Epoch 14/100\n",
      "4/4 [==============================] - 0s 31ms/step - loss: 55.0152 - accuracy: 0.5310 - val_loss: 56.6128 - val_accuracy: 0.5517\n",
      "Epoch 15/100\n",
      "4/4 [==============================] - 0s 31ms/step - loss: 53.1693 - accuracy: 0.4513 - val_loss: 54.7033 - val_accuracy: 0.4828\n",
      "Epoch 16/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 51.2993 - accuracy: 0.4513 - val_loss: 52.9083 - val_accuracy: 0.4828\n",
      "Epoch 17/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 49.6578 - accuracy: 0.3628 - val_loss: 51.2119 - val_accuracy: 0.4483\n",
      "Epoch 18/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 48.0478 - accuracy: 0.3805 - val_loss: 49.5889 - val_accuracy: 0.4138\n",
      "Epoch 19/100\n",
      "4/4 [==============================] - 0s 59ms/step - loss: 46.5758 - accuracy: 0.3805 - val_loss: 47.9337 - val_accuracy: 0.4828\n",
      "Epoch 20/100\n",
      "4/4 [==============================] - 0s 36ms/step - loss: 45.0289 - accuracy: 0.3628 - val_loss: 46.3321 - val_accuracy: 0.5172\n",
      "Epoch 21/100\n",
      "4/4 [==============================] - 0s 31ms/step - loss: 43.5017 - accuracy: 0.4159 - val_loss: 44.8019 - val_accuracy: 0.4828\n",
      "Epoch 22/100\n",
      "4/4 [==============================] - 0s 25ms/step - loss: 42.0104 - accuracy: 0.4336 - val_loss: 43.3218 - val_accuracy: 0.4828\n",
      "Epoch 23/100\n",
      "4/4 [==============================] - 0s 28ms/step - loss: 40.6913 - accuracy: 0.4159 - val_loss: 41.7952 - val_accuracy: 0.4828\n",
      "Epoch 24/100\n",
      "4/4 [==============================] - 0s 23ms/step - loss: 39.2561 - accuracy: 0.4071 - val_loss: 40.3228 - val_accuracy: 0.4828\n",
      "Epoch 25/100\n",
      "4/4 [==============================] - 0s 30ms/step - loss: 37.8970 - accuracy: 0.4071 - val_loss: 38.8931 - val_accuracy: 0.4828\n",
      "Epoch 26/100\n",
      "4/4 [==============================] - 0s 45ms/step - loss: 36.4778 - accuracy: 0.3894 - val_loss: 37.5170 - val_accuracy: 0.5172\n",
      "Epoch 27/100\n",
      "4/4 [==============================] - 0s 26ms/step - loss: 35.2205 - accuracy: 0.3982 - val_loss: 36.1536 - val_accuracy: 0.5172\n",
      "Epoch 28/100\n",
      "4/4 [==============================] - 0s 23ms/step - loss: 33.9507 - accuracy: 0.4071 - val_loss: 34.8573 - val_accuracy: 0.5172\n",
      "Epoch 29/100\n",
      "4/4 [==============================] - 0s 20ms/step - loss: 32.7304 - accuracy: 0.4159 - val_loss: 33.6040 - val_accuracy: 0.5172\n",
      "Epoch 30/100\n",
      "4/4 [==============================] - 0s 46ms/step - loss: 31.5652 - accuracy: 0.3982 - val_loss: 32.3994 - val_accuracy: 0.4828\n",
      "Epoch 31/100\n",
      "4/4 [==============================] - 0s 27ms/step - loss: 30.3607 - accuracy: 0.3982 - val_loss: 31.2419 - val_accuracy: 0.4828\n",
      "Epoch 32/100\n",
      "4/4 [==============================] - 0s 33ms/step - loss: 29.3122 - accuracy: 0.4071 - val_loss: 30.0935 - val_accuracy: 0.4828\n",
      "Epoch 33/100\n",
      "4/4 [==============================] - 0s 27ms/step - loss: 28.1744 - accuracy: 0.4248 - val_loss: 29.0340 - val_accuracy: 0.5172\n",
      "Epoch 34/100\n",
      "4/4 [==============================] - 0s 35ms/step - loss: 27.1209 - accuracy: 0.4513 - val_loss: 28.0266 - val_accuracy: 0.4828\n",
      "Epoch 35/100\n",
      "4/4 [==============================] - 0s 28ms/step - loss: 26.1758 - accuracy: 0.4248 - val_loss: 26.9813 - val_accuracy: 0.4483\n",
      "Epoch 36/100\n",
      "4/4 [==============================] - 0s 25ms/step - loss: 25.1789 - accuracy: 0.4248 - val_loss: 25.9628 - val_accuracy: 0.4828\n",
      "Epoch 37/100\n",
      "4/4 [==============================] - 0s 22ms/step - loss: 24.2336 - accuracy: 0.3717 - val_loss: 24.9675 - val_accuracy: 0.4138\n",
      "Epoch 38/100\n",
      "4/4 [==============================] - 0s 27ms/step - loss: 23.3025 - accuracy: 0.3717 - val_loss: 23.9921 - val_accuracy: 0.4483\n",
      "Epoch 39/100\n",
      "4/4 [==============================] - 0s 73ms/step - loss: 22.3833 - accuracy: 0.3628 - val_loss: 23.0618 - val_accuracy: 0.4483\n",
      "Epoch 40/100\n",
      "4/4 [==============================] - 0s 38ms/step - loss: 21.5026 - accuracy: 0.4248 - val_loss: 22.1633 - val_accuracy: 0.4483\n",
      "Epoch 41/100\n",
      "4/4 [==============================] - 0s 23ms/step - loss: 20.6412 - accuracy: 0.4248 - val_loss: 21.2872 - val_accuracy: 0.4828\n",
      "Epoch 42/100\n",
      "4/4 [==============================] - 0s 29ms/step - loss: 19.7978 - accuracy: 0.4336 - val_loss: 20.4122 - val_accuracy: 0.4483\n",
      "Epoch 43/100\n",
      "4/4 [==============================] - 0s 30ms/step - loss: 18.9714 - accuracy: 0.3982 - val_loss: 19.5499 - val_accuracy: 0.4483\n",
      "Epoch 44/100\n",
      "4/4 [==============================] - 0s 39ms/step - loss: 18.2438 - accuracy: 0.3628 - val_loss: 18.6894 - val_accuracy: 0.4483\n",
      "Epoch 45/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 17.4079 - accuracy: 0.3805 - val_loss: 17.9108 - val_accuracy: 0.4483\n",
      "Epoch 46/100\n",
      "4/4 [==============================] - 0s 22ms/step - loss: 16.6292 - accuracy: 0.3982 - val_loss: 17.1620 - val_accuracy: 0.4828\n",
      "Epoch 47/100\n",
      "4/4 [==============================] - 0s 18ms/step - loss: 15.9273 - accuracy: 0.4159 - val_loss: 16.3611 - val_accuracy: 0.4483\n",
      "Epoch 48/100\n",
      "4/4 [==============================] - 0s 20ms/step - loss: 15.2396 - accuracy: 0.3894 - val_loss: 15.5946 - val_accuracy: 0.4483\n",
      "Epoch 49/100\n",
      "4/4 [==============================] - 0s 19ms/step - loss: 14.5011 - accuracy: 0.3894 - val_loss: 14.9006 - val_accuracy: 0.4483\n",
      "Epoch 50/100\n",
      "4/4 [==============================] - 0s 17ms/step - loss: 13.8064 - accuracy: 0.4248 - val_loss: 14.2332 - val_accuracy: 0.4483\n",
      "Epoch 51/100\n",
      "4/4 [==============================] - 0s 36ms/step - loss: 13.1776 - accuracy: 0.3805 - val_loss: 13.5294 - val_accuracy: 0.4483\n",
      "Epoch 52/100\n",
      "4/4 [==============================] - 0s 30ms/step - loss: 12.5460 - accuracy: 0.3894 - val_loss: 12.8734 - val_accuracy: 0.4483\n",
      "Epoch 53/100\n",
      "4/4 [==============================] - 0s 22ms/step - loss: 11.9516 - accuracy: 0.3717 - val_loss: 12.2515 - val_accuracy: 0.4483\n",
      "Epoch 54/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 11.3302 - accuracy: 0.3805 - val_loss: 11.6679 - val_accuracy: 0.5172\n",
      "Epoch 55/100\n",
      "4/4 [==============================] - 0s 20ms/step - loss: 10.7632 - accuracy: 0.4336 - val_loss: 11.0560 - val_accuracy: 0.5172\n",
      "Epoch 56/100\n",
      "4/4 [==============================] - 0s 17ms/step - loss: 10.1799 - accuracy: 0.3982 - val_loss: 10.4460 - val_accuracy: 0.4483\n",
      "Epoch 57/100\n",
      "4/4 [==============================] - 0s 24ms/step - loss: 9.6260 - accuracy: 0.3628 - val_loss: 9.8673 - val_accuracy: 0.4483\n",
      "Epoch 58/100\n",
      "4/4 [==============================] - 0s 20ms/step - loss: 9.1048 - accuracy: 0.3805 - val_loss: 9.3155 - val_accuracy: 0.4483\n",
      "Epoch 59/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 8.5433 - accuracy: 0.3805 - val_loss: 8.7962 - val_accuracy: 0.4828\n",
      "Epoch 60/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 8.0530 - accuracy: 0.4071 - val_loss: 8.2376 - val_accuracy: 0.4828\n",
      "Epoch 61/100\n",
      "4/4 [==============================] - 0s 27ms/step - loss: 7.5170 - accuracy: 0.3894 - val_loss: 7.7023 - val_accuracy: 0.4483\n",
      "Epoch 62/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 7.0185 - accuracy: 0.3805 - val_loss: 7.1898 - val_accuracy: 0.4483\n",
      "Epoch 63/100\n",
      "4/4 [==============================] - 0s 14ms/step - loss: 6.5571 - accuracy: 0.3894 - val_loss: 6.6888 - val_accuracy: 0.4483\n",
      "Epoch 64/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 6.0677 - accuracy: 0.3894 - val_loss: 6.1906 - val_accuracy: 0.4828\n",
      "Epoch 65/100\n",
      "4/4 [==============================] - 0s 15ms/step - loss: 5.5969 - accuracy: 0.4071 - val_loss: 5.6925 - val_accuracy: 0.4483\n",
      "Epoch 66/100\n",
      "4/4 [==============================] - 0s 21ms/step - loss: 5.1521 - accuracy: 0.3805 - val_loss: 5.2150 - val_accuracy: 0.4483\n",
      "Epoch 67/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 4.7137 - accuracy: 0.3628 - val_loss: 4.7597 - val_accuracy: 0.4828\n",
      "Epoch 68/100\n",
      "4/4 [==============================] - 0s 18ms/step - loss: 4.2940 - accuracy: 0.3982 - val_loss: 4.3203 - val_accuracy: 0.4828\n",
      "Epoch 69/100\n",
      "4/4 [==============================] - 0s 14ms/step - loss: 3.8480 - accuracy: 0.4248 - val_loss: 3.8896 - val_accuracy: 0.4828\n",
      "Epoch 70/100\n",
      "4/4 [==============================] - 0s 17ms/step - loss: 3.4642 - accuracy: 0.4425 - val_loss: 3.4516 - val_accuracy: 0.4483\n",
      "Epoch 71/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 3.0281 - accuracy: 0.4159 - val_loss: 3.0476 - val_accuracy: 0.4483\n",
      "Epoch 72/100\n",
      "4/4 [==============================] - 0s 18ms/step - loss: 2.6384 - accuracy: 0.3982 - val_loss: 2.5983 - val_accuracy: 0.4483\n",
      "Epoch 73/100\n",
      "4/4 [==============================] - 0s 22ms/step - loss: 2.2330 - accuracy: 0.3805 - val_loss: 2.1812 - val_accuracy: 0.4483\n",
      "Epoch 74/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 1.8590 - accuracy: 0.3982 - val_loss: 1.7759 - val_accuracy: 0.4483\n",
      "Epoch 75/100\n",
      "4/4 [==============================] - 0s 15ms/step - loss: 1.4624 - accuracy: 0.4425 - val_loss: 1.4093 - val_accuracy: 0.4483\n",
      "Epoch 76/100\n",
      "4/4 [==============================] - 0s 20ms/step - loss: 1.1178 - accuracy: 0.5221 - val_loss: 1.1257 - val_accuracy: 0.4828\n",
      "Epoch 77/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 0.8546 - accuracy: 0.5664 - val_loss: 0.9308 - val_accuracy: 0.5862\n",
      "Epoch 78/100\n",
      "4/4 [==============================] - 0s 26ms/step - loss: 0.7511 - accuracy: 0.6372 - val_loss: 0.8697 - val_accuracy: 0.5517\n",
      "Epoch 79/100\n",
      "4/4 [==============================] - 0s 17ms/step - loss: 0.6947 - accuracy: 0.6637 - val_loss: 0.8912 - val_accuracy: 0.6207\n",
      "Epoch 80/100\n",
      "4/4 [==============================] - 0s 14ms/step - loss: 0.6613 - accuracy: 0.7080 - val_loss: 0.8345 - val_accuracy: 0.6207\n",
      "Epoch 81/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 0.6228 - accuracy: 0.7699 - val_loss: 0.8029 - val_accuracy: 0.6207\n",
      "Epoch 82/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 0.6143 - accuracy: 0.7522 - val_loss: 0.7793 - val_accuracy: 0.5862\n",
      "Epoch 83/100\n",
      "4/4 [==============================] - 0s 16ms/step - loss: 0.6215 - accuracy: 0.7345 - val_loss: 0.7769 - val_accuracy: 0.6552\n",
      "Epoch 84/100\n",
      "4/4 [==============================] - 0s 17ms/step - loss: 0.5967 - accuracy: 0.7611 - val_loss: 0.8145 - val_accuracy: 0.6207\n",
      "Epoch 85/100\n",
      "4/4 [==============================] - 0s 29ms/step - loss: 0.5990 - accuracy: 0.7345 - val_loss: 0.7951 - val_accuracy: 0.6552\n",
      "Epoch 86/100\n",
      "4/4 [==============================] - 0s 29ms/step - loss: 0.5841 - accuracy: 0.7345 - val_loss: 0.7627 - val_accuracy: 0.6552\n",
      "Epoch 87/100\n",
      "4/4 [==============================] - 0s 22ms/step - loss: 0.5990 - accuracy: 0.7434 - val_loss: 0.7296 - val_accuracy: 0.6897\n",
      "Epoch 88/100\n",
      "4/4 [==============================] - 0s 30ms/step - loss: 0.6547 - accuracy: 0.7080 - val_loss: 0.7285 - val_accuracy: 0.6552\n",
      "Epoch 89/100\n",
      "4/4 [==============================] - 0s 20ms/step - loss: 0.6715 - accuracy: 0.7168 - val_loss: 0.7712 - val_accuracy: 0.6552\n",
      "Epoch 90/100\n",
      "4/4 [==============================] - 0s 15ms/step - loss: 0.5484 - accuracy: 0.7699 - val_loss: 0.7799 - val_accuracy: 0.6897\n",
      "Epoch 91/100\n",
      "4/4 [==============================] - 0s 22ms/step - loss: 0.5889 - accuracy: 0.7522 - val_loss: 0.7056 - val_accuracy: 0.7241\n",
      "Epoch 92/100\n",
      "4/4 [==============================] - 0s 24ms/step - loss: 0.5503 - accuracy: 0.7522 - val_loss: 0.6967 - val_accuracy: 0.7241\n",
      "Epoch 93/100\n",
      "4/4 [==============================] - 0s 26ms/step - loss: 0.5524 - accuracy: 0.7699 - val_loss: 0.6693 - val_accuracy: 0.6207\n",
      "Epoch 94/100\n",
      "4/4 [==============================] - 0s 28ms/step - loss: 0.5352 - accuracy: 0.7699 - val_loss: 0.6928 - val_accuracy: 0.7241\n",
      "Epoch 95/100\n",
      "4/4 [==============================] - 0s 24ms/step - loss: 0.5316 - accuracy: 0.7876 - val_loss: 0.6860 - val_accuracy: 0.7241\n",
      "Epoch 96/100\n",
      "4/4 [==============================] - 0s 27ms/step - loss: 0.5182 - accuracy: 0.7876 - val_loss: 0.6590 - val_accuracy: 0.6897\n",
      "Epoch 97/100\n",
      "4/4 [==============================] - 0s 33ms/step - loss: 0.5072 - accuracy: 0.8053 - val_loss: 0.6588 - val_accuracy: 0.6897\n",
      "Epoch 98/100\n",
      "4/4 [==============================] - 0s 18ms/step - loss: 0.5065 - accuracy: 0.8230 - val_loss: 0.6638 - val_accuracy: 0.6552\n",
      "Epoch 99/100\n",
      "4/4 [==============================] - 0s 18ms/step - loss: 0.4954 - accuracy: 0.7965 - val_loss: 0.6514 - val_accuracy: 0.6897\n",
      "Epoch 100/100\n",
      "4/4 [==============================] - 0s 22ms/step - loss: 0.5070 - accuracy: 0.7876 - val_loss: 0.6386 - val_accuracy: 0.6897\n",
      "2/2 [==============================] - 0s 7ms/step - loss: 0.4885 - accuracy: 0.7778\n",
      "Accuracy: 77.78\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from sklearn.datasets import load_wine\n",
    "from sklearn.model_selection import train_test_split\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "\n",
    "# Load the wine dataset\n",
    "data = load_wine()\n",
    "X = data.data\n",
    "y = data.target\n",
    "\n",
    "# Split the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Build the model\n",
    "model = Sequential()\n",
    "model.add(Dense(10, input_dim=X_train.shape[1], activation='relu'))\n",
    "model.add(Dense(5, activation='relu'))\n",
    "model.add(Dense(3, activation='softmax'))\n",
    "\n",
    "# Compile the model\n",
    "model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n",
    "\n",
    "# Train the model\n",
    "history = model.fit(X_train, tf.keras.utils.to_categorical(y_train), epochs=100, batch_size=32, validation_split=0.2)\n",
    "\n",
    "# Evaluate the model on the test set\n",
    "loss, accuracy = model.evaluate(X_test, tf.keras.utils.to_categorical(y_test))\n",
    "print('Accuracy: %.2f' % (accuracy*100))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f18f00b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#RNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "177951b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense, SimpleRNN, Dropout\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8b055dea",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('IBM stock price.csv')\n",
    "df = df['Close'].values.reshape(-1,1)\n",
    "\n",
    "train_size = int(len(df) * 0.8)\n",
    "train_data = df[:train_size]\n",
    "test_data = df[train_size:]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5d595c8b",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = MinMaxScaler()\n",
    "train_data = scaler.fit_transform(train_data)\n",
    "test_data = scaler.transform(test_data)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1b8daa48",
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_dataset(data, window_size):\n",
    "    X, y = [], []\n",
    "    for i in range(len(data)-window_size):\n",
    "        X.append(data[i:i+window_size])\n",
    "        y.append(data[i+window_size])\n",
    "    return np.array(X), np.array(y)\n",
    "\n",
    "window_size = 10\n",
    "X_train, y_train = create_dataset(train_data, window_size)\n",
    "X_test, y_test = create_dataset(test_data, window_size)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a092cb03",
   "metadata": {},
   "outputs": [],
   "source": [
    "model = Sequential()\n",
    "\n",
    "model.add(SimpleRNN(64, input_shape=(window_size, 1)))\n",
    "model.add(Dense(32, activation='relu'))\n",
    "model.add(Dropout(0.2))\n",
    "model.add(Dense(1, activation='linear'))\n",
    "\n",
    "model.compile(optimizer='adam', loss='mse')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "27c4467d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "76/76 [==============================] - 3s 21ms/step - loss: 0.0113 - val_loss: 0.0142\n",
      "Epoch 2/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0040 - val_loss: 0.0033\n",
      "Epoch 3/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0036 - val_loss: 0.0060\n",
      "Epoch 4/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0032 - val_loss: 0.0046\n",
      "Epoch 5/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0031 - val_loss: 0.0013\n",
      "Epoch 6/50\n",
      "76/76 [==============================] - 1s 8ms/step - loss: 0.0026 - val_loss: 0.0012\n",
      "Epoch 7/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0026 - val_loss: 7.8692e-04\n",
      "Epoch 8/50\n",
      "76/76 [==============================] - 1s 9ms/step - loss: 0.0026 - val_loss: 0.0011\n",
      "Epoch 9/50\n",
      "76/76 [==============================] - 1s 11ms/step - loss: 0.0022 - val_loss: 0.0015\n",
      "Epoch 10/50\n",
      "76/76 [==============================] - 1s 13ms/step - loss: 0.0019 - val_loss: 0.0013\n",
      "Epoch 11/50\n",
      "76/76 [==============================] - 1s 15ms/step - loss: 0.0022 - val_loss: 9.4973e-04\n",
      "Epoch 12/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0021 - val_loss: 0.0031\n",
      "Epoch 13/50\n",
      "76/76 [==============================] - 1s 9ms/step - loss: 0.0018 - val_loss: 0.0019\n",
      "Epoch 14/50\n",
      "76/76 [==============================] - 1s 13ms/step - loss: 0.0017 - val_loss: 5.5262e-04\n",
      "Epoch 15/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0019 - val_loss: 0.0017\n",
      "Epoch 16/50\n",
      "76/76 [==============================] - 1s 11ms/step - loss: 0.0015 - val_loss: 0.0017\n",
      "Epoch 17/50\n",
      "76/76 [==============================] - 1s 11ms/step - loss: 0.0016 - val_loss: 4.6291e-04\n",
      "Epoch 18/50\n",
      "76/76 [==============================] - 1s 11ms/step - loss: 0.0016 - val_loss: 7.1451e-04\n",
      "Epoch 19/50\n",
      "76/76 [==============================] - 1s 17ms/step - loss: 0.0015 - val_loss: 8.4035e-04\n",
      "Epoch 20/50\n",
      "76/76 [==============================] - 1s 18ms/step - loss: 0.0014 - val_loss: 5.8442e-04\n",
      "Epoch 21/50\n",
      "76/76 [==============================] - 1s 16ms/step - loss: 0.0016 - val_loss: 0.0017\n",
      "Epoch 22/50\n",
      "76/76 [==============================] - 1s 14ms/step - loss: 0.0015 - val_loss: 0.0014\n",
      "Epoch 23/50\n",
      "76/76 [==============================] - 1s 12ms/step - loss: 0.0014 - val_loss: 3.9530e-04\n",
      "Epoch 24/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0014 - val_loss: 5.4304e-04\n",
      "Epoch 25/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0014 - val_loss: 5.4624e-04\n",
      "Epoch 26/50\n",
      "76/76 [==============================] - 1s 9ms/step - loss: 0.0014 - val_loss: 0.0018\n",
      "Epoch 27/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0014 - val_loss: 6.8415e-04\n",
      "Epoch 28/50\n",
      "76/76 [==============================] - 1s 12ms/step - loss: 0.0015 - val_loss: 3.3715e-04\n",
      "Epoch 29/50\n",
      "76/76 [==============================] - 1s 11ms/step - loss: 0.0015 - val_loss: 0.0013\n",
      "Epoch 30/50\n",
      "76/76 [==============================] - 1s 13ms/step - loss: 0.0014 - val_loss: 0.0064\n",
      "Epoch 31/50\n",
      "76/76 [==============================] - 1s 12ms/step - loss: 0.0014 - val_loss: 3.4237e-04\n",
      "Epoch 32/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0014 - val_loss: 6.5310e-04\n",
      "Epoch 33/50\n",
      "76/76 [==============================] - 1s 9ms/step - loss: 0.0012 - val_loss: 6.3978e-04\n",
      "Epoch 34/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0013 - val_loss: 5.0531e-04\n",
      "Epoch 35/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0013 - val_loss: 5.6586e-04\n",
      "Epoch 36/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0013 - val_loss: 3.8253e-04\n",
      "Epoch 37/50\n",
      "76/76 [==============================] - 1s 8ms/step - loss: 0.0013 - val_loss: 3.1297e-04\n",
      "Epoch 38/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0013 - val_loss: 0.0010\n",
      "Epoch 39/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0013 - val_loss: 5.1491e-04\n",
      "Epoch 40/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0013 - val_loss: 5.9346e-04\n",
      "Epoch 41/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0013 - val_loss: 6.4542e-04\n",
      "Epoch 42/50\n",
      "76/76 [==============================] - 1s 7ms/step - loss: 0.0013 - val_loss: 0.0013\n",
      "Epoch 43/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0014 - val_loss: 0.0012\n",
      "Epoch 44/50\n",
      "76/76 [==============================] - 0s 6ms/step - loss: 0.0011 - val_loss: 5.4352e-04\n",
      "Epoch 45/50\n",
      "76/76 [==============================] - 1s 10ms/step - loss: 0.0013 - val_loss: 5.9034e-04\n",
      "Epoch 46/50\n",
      "76/76 [==============================] - 1s 9ms/step - loss: 0.0013 - val_loss: 8.3215e-04\n",
      "Epoch 47/50\n",
      "76/76 [==============================] - 1s 18ms/step - loss: 0.0012 - val_loss: 0.0042\n",
      "Epoch 48/50\n",
      "76/76 [==============================] - 1s 11ms/step - loss: 0.0012 - val_loss: 4.9997e-04\n",
      "Epoch 49/50\n",
      "76/76 [==============================] - 1s 9ms/step - loss: 0.0013 - val_loss: 9.0197e-04\n",
      "Epoch 50/50\n",
      "76/76 [==============================] - 1s 8ms/step - loss: 0.0013 - val_loss: 0.0011\n"
     ]
    },
    {
     "ename": "TypeError",
     "evalue": "cannot unpack non-iterable float object",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/qx/z0prkyh54lg62x620yzry0400000gn/T/ipykernel_4049/122688567.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_mse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_mse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Train MSE: %.3f, Test MSE: %.3f'\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mtrain_mse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_mse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: cannot unpack non-iterable float object"
     ]
    }
   ],
   "source": [
    "history = model.fit(X_train, y_train, epochs=50, batch_size=32, verbose=1, validation_data=(X_test, y_test))\n",
    "\n",
    "_, train_mse = model.evaluate(X_train, y_train, verbose=0)\n",
    "_, test_mse = model.evaluate(X_test, y_test, verbose=0)\n",
    "print('Train MSE: %.3f, Test MSE: %.3f' % (train_mse, test_mse))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15f7f6fc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
